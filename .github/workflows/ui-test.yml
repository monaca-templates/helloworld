name: UI Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: macos-latest  # ✅ Required for Apple Silicon

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # ✅ Install Java JDK (Required for Android SDK & Gradle)
      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK
        run: |
            echo "Installing Android SDK..."
            export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
            mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
            curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
            unzip -q sdk-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools/latest
            rm sdk-tools.zip

            export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/platform-tools:$PATH

            # Accept licenses and install ARM64 emulator
            yes | sdkmanager --licenses
            sdkmanager --install "platform-tools" "build-tools;34.0.0" "platforms;android-34" "system-images;android-34;google_apis_playstore;arm64-v8a" "emulator"

      - name: Create & Start Android Emulator
        run: |
            export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
            export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/platform-tools:$PATH

            echo "Creating AVD..."
            echo "no" | avdmanager create avd -n test-avd -k "system-images;android-34;google_apis_playstore;arm64-v8a" --device "pixel_5"

            echo "Starting AVD..."
            nohup emulator -avd test-avd -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect -accel off -no-snapshot -skin 1080x1920 -memory 2048 &
            sleep 180  # Increased sleep time for stable boot

            echo "Checking connected devices..."
            adb devices
            adb shell input keyevent 82  # Unlock screen

      # ✅ Install Dependencies
      - name: Install Dependencies
        run: npm install

      # ✅ Build Android APK
      - name: Build Android APK
        run: |
          npx cordova platform add android
          npx cordova build android --debug

      # ✅ Start Appium Server (Headless Mode)
      - name: Start Appium Server
        run: |
          nohup npx appium --base-path /wd/hub > appium.log 2>&1 &
          sleep 10  # Wait for Appium to start

      # ✅ Run WebdriverIO Tests
      - name: Run WebdriverIO Tests
        run: npx wdio run wdio.conf.js

      # ✅ Upload Logs on Failure
      - name: Upload Appium Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: appium-logs
          path: appium.log
          retention-days: 7

      # ✅ Upload Screenshots if Tests Fail
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: test/screenshots
          retention-days: 7
